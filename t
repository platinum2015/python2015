{"cells":[{"cell_type":"markdown","source":["#Netcat\n\nThis notebook provide some basic netcat functionality which you need to let a stream run so that the Spark Streaming Engine can process it.\n\nThe simplest way is to click `Run All` on the top. (You can change the message it sends when you want). <br>\nTo do this, after you run it, you have to `stop the Execution` and you have to manually execute `nc.close()`. <br>\nThen you can modify the function `send(nc)` and then press `Run All` again."],"metadata":{}},{"cell_type":"code","source":["import socket\n\nclass Netcat:\n\n    \"\"\" Python 'netcat like' module \"\"\"\n\n    def __init__(self, ip, port):\n\n        self.buff = \"\"\n        self.socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n        self.socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\n        self.socket.bind((ip, port))\n        self.socket.listen(10)\n        self.conn, addr = self.socket.accept()\n \n    def write(self, data):\n\n        self.conn.send(data + '\\n')\n    \n    def close(self):\n\n      self.socket.close()"],"metadata":{},"outputs":[],"execution_count":2},{"cell_type":"code","source":["def send(nc):\n  while True:\n    try:\n      nc.write('Hello World Bye World')\n      nc.write('Hello Spark Goodbye Spark')\n      nc.write(\"ass isn't allowed.\")\n    except:\n      break"],"metadata":{},"outputs":[],"execution_count":3},{"cell_type":"code","source":["# start a new Netcat() instance\nwhile True:\n  nc = Netcat('127.0.0.1', 9999)\n  try:\n    send(nc)\n  finally:\n    nc.close()\n"],"metadata":{},"outputs":[],"execution_count":4},{"cell_type":"code","source":["# Always close at the end\nnc.close()"],"metadata":{},"outputs":[],"execution_count":5},{"cell_type":"code","source":[""],"metadata":{},"outputs":[],"execution_count":6}],"metadata":{"name":"netcat","notebookId":3438767314777360},"nbformat":4,"nbformat_minor":0}
